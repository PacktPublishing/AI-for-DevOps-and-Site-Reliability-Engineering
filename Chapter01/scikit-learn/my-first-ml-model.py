
# My First Machine Learning Model
# This file contains code generated by GitHub Copilot and edited by a human.
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
import numpy as np
import matplotlib.pyplot as plt

# Generate some random data into two arrays X and y
# X is an array with 1000 rows and 1 column
# y is an array with 1000 rows and 1 column calculated from X
X = np.random.rand(1000, 1)
y = 2 + 3 * X + np.random.randn(1000, 1)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.12, random_state=42)

# Plot the training data
plt.scatter(X_train, y_train, color='blue')

# Plot the testing data
plt.scatter(X_test, y_test, color='green')

# Train the model using Linear Regression algorithm
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the testing set
y_pred = model.predict(X_test)

# Calculate the mean squared error
# Which measures the error between the estimated values and the testing set (ground truth)
mse = mean_squared_error(y_test, y_pred)

# Print the mean squared error
# The closer to zero is the value, the better is the model
print("Mean squared error:", mse)

# Plot the predicted values
plt.plot(X_test, y_pred, color='red')

# Add labels and title
plt.xlabel('X')
plt.ylabel('y')
plt.title('Linear Regression ML Model')

# Show the plot
plt.show()